akka {
  loglevel = DEBUG
  log-config-on-start = off
}

spray {
  interface = "127.0.0.1"
  port = 8080

  # check the reference.conf in /spray-can/main/resources for all defined settings
  # http://spray.io/documentation/1.2.1/spray-can/configuration/
  can {
    server {
      server-header = spray-can/${spray.version}
      ssl-encryption = off
      request-timeout = 10s
      remote-address-header = on
    }
  }
  client {
    user-agent-header = spray-can/${spray.version}
    proxy {
      # Proxy settings for unencrypted HTTP requests
      # Set to 'none' to always connect directly, 'default' to use the system
      # settings as described in http://docs.oracle.com/javase/6/docs/technotes/guides/net/proxies.html
      # or specify the proxy host, port and non proxy hosts as demonstrated
      # in the following example:
      # http {
      #   host = myproxy.com
      #   port = 8080
      #   non-proxy-hosts = ["*.direct-access.net"]
      # }
      http = default

      # Proxy settings for HTTPS requests (currently unsupported)
      https = default
    }
  }
  host-connector {
    # The maximum number of parallel connections that an `HttpHostConnector`
    # is allowed to establish to a host. Must be greater than zero.
    max-connections = 4

    # The maximum number of times an `HttpHostConnector` attempts to repeat
    # failed requests (if the request can be safely retried) before
    # giving up and returning an error.
    max-retries = 0

    # Configures redirection following.
    # If set to zero redirection responses will not be followed, i.e. they'll be returned to the user as is.
    # If set to a value > zero redirection responses will be followed up to the given number of times.
    # If the redirection chain is longer than the configured value the first redirection response that is
    # is not followed anymore is returned to the user as is.
    max-redirects = 0

    # If this setting is enabled, the `HttpHostConnector` pipelines requests
    # across connections, otherwise only one single request can be "open"
    # on a particular HTTP connection.
    pipelining = off

    # The time after which an idle `HttpHostConnector` (without open
    # connections) will automatically terminate itself.
    # Set to `infinite` to completely disable idle timeouts.
    idle-timeout = 30 s

    # If a request hasn't been responded to after the time period set here
    # a `spray.http.Timedout` message will be sent to the timeout handler.
    # Set to `infinite` to completely disable request timeouts.
    request-timeout = 2000 s

    # Modify to tweak client settings for this host-connector only.
    client = ${spray.can.client}
  }
  # check the reference.conf in /spray-routing/main/resources for all defined settings
  routing {
    file-chunking-threshold-size = 10k
    file-chunking-chunk-size = 5k
  }
}
